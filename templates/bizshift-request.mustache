/* eslint-disable */
/*
 * this code generated by swagger-codegen
 */
import axios from 'axios';
import qs from 'qs';

let domain = process.env.API_ORIGIN_VERSION;

export const getDomain = () => {
  return domain;
};

export const setDomain = ($domain) => {
  domain = $domain;
};

export const request = (method, url, body, queryParameters, form, config) => {
  method = method.toLowerCase();
  let keys = Object.keys(queryParameters);
  let queryUrl = url;
  if (keys.length > 0) {
    queryUrl = url + '?' + qs.stringify(queryParameters);
  }

  config = {
    responseType: 'json',
    withCredential: true
  }
  if (body) {
    return axios[method](queryUrl, body, config);
  } else if (method === 'get') {
    return axios[method](queryUrl, config);
  } else {
    return axios[method](queryUrl, JSON.stringify(form), config);
  }
};

function mergeQueryParams(parameters, queryParameters) {
  if (parameters.$queryParameters) {
    Object.keys(parameters.$queryParameters)
      .forEach(function(parameterName) {
        let parameter = parameters.$queryParameters[parameterName];
        queryParameters[parameterName] = parameter;
      });
  }
  return queryParameters;
}

{{#methods}}
  {{> method}}
{{/methods}}
